@model MineradorRH.Models.ConfiguracaoArvore

@{
    ViewBag.Title = "Editar árvore";
}

<h2>Editar árvore</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.DataCriacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.DataCriacao, new { htmlAttributes = new { @class = "form-control", @Value = @Model.DataCriacao.ToString("dd-MM-yyyy") } })
                @Html.ValidationMessageFor(model => model.DataCriacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Poda, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Poda, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Descricao, new { htmlAttributes = new { @id = "descricao", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Sql, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Sql, new { @id = "sql" } )
                @Html.ValidationMessageFor(model => model.Sql, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-success" />
                <a class="btn btn-default" href="@Url.Action("Index")">Cancelar</a>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="~/Scripts/codemirror.js"></script>
    <script src="~/Scripts/sql.js"></script>
    <script>
    $(document).ready(function () {
        var mime = 'text/x-sql';

        // get mime type
        if (window.location.href.indexOf('mime=') > -1) {
            mime = window.location.href.substr(window.location.href.indexOf('mime=') + 5);
        }

        var somenteLeitura = "@Html.Raw(ViewBag.PossuiArvoreGerada)";

        window.editor = CodeMirror.fromTextArea(document.getElementById('sql'), {
            mode: mime,
            indentWithTabs: true,
            smartIndent: true,
            lineNumbers: true,
            matchBrackets: true,
            readOnly : somenteLeitura,
            autofocus: true
        });
    });
</script>}